import e from"regenerator-runtime/runtime";var r={};Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"AlgPart",{enumerable:!0,get:function(){return t.AlgPart}}),Object.defineProperty(r,"Unit",{enumerable:!0,get:function(){return t.Unit}}),Object.defineProperty(r,"WithAmount",{enumerable:!0,get:function(){return t.WithAmount}}),Object.defineProperty(r,"Move",{enumerable:!0,get:function(){return t.Move}}),Object.defineProperty(r,"Container",{enumerable:!0,get:function(){return t.Container}}),Object.defineProperty(r,"Annotation",{enumerable:!0,get:function(){return t.Annotation}}),Object.defineProperty(r,"Sequence",{enumerable:!0,get:function(){return t.Sequence}}),Object.defineProperty(r,"Group",{enumerable:!0,get:function(){return t.Group}}),Object.defineProperty(r,"MoveFamily",{enumerable:!0,get:function(){return t.MoveFamily}}),Object.defineProperty(r,"BlockMove",{enumerable:!0,get:function(){return t.BlockMove}}),Object.defineProperty(r,"BareBlockMove",{enumerable:!0,get:function(){return t.BareBlockMove}}),Object.defineProperty(r,"LayerBlockMove",{enumerable:!0,get:function(){return t.LayerBlockMove}}),Object.defineProperty(r,"RangeBlockMove",{enumerable:!0,get:function(){return t.RangeBlockMove}}),Object.defineProperty(r,"Commutator",{enumerable:!0,get:function(){return t.Commutator}}),Object.defineProperty(r,"Conjugate",{enumerable:!0,get:function(){return t.Conjugate}}),Object.defineProperty(r,"Pause",{enumerable:!0,get:function(){return t.Pause}}),Object.defineProperty(r,"NewLine",{enumerable:!0,get:function(){return t.NewLine}}),Object.defineProperty(r,"Comment",{enumerable:!0,get:function(){return t.Comment}}),Object.defineProperty(r,"modifiedBlockMove",{enumerable:!0,get:function(){return G.modifiedBlockMove}}),Object.defineProperty(r,"experimentalAppendBlockMove",{enumerable:!0,get:function(){return G.experimentalAppendBlockMove}}),Object.defineProperty(r,"experimentalConcatAlgs",{enumerable:!0,get:function(){return G.experimentalConcatAlgs}}),Object.defineProperty(r,"TraversalDownUp",{enumerable:!0,get:function(){return D.TraversalDownUp}}),Object.defineProperty(r,"TraversalUp",{enumerable:!0,get:function(){return D.TraversalUp}}),Object.defineProperty(r,"invert",{enumerable:!0,get:function(){return D.invert}}),Object.defineProperty(r,"expand",{enumerable:!0,get:function(){return D.expand}}),Object.defineProperty(r,"structureEquals",{enumerable:!0,get:function(){return D.structureEquals}}),Object.defineProperty(r,"coalesceBaseMoves",{enumerable:!0,get:function(){return D.coalesceBaseMoves}}),Object.defineProperty(r,"algToString",{enumerable:!0,get:function(){return D.algToString}}),Object.defineProperty(r,"algPartToStringForTesting",{enumerable:!0,get:function(){return D.algPartToStringForTesting}}),Object.defineProperty(r,"blockMoveToString",{enumerable:!0,get:function(){return D.blockMoveToString}}),Object.defineProperty(r,"AlgJSON",{enumerable:!0,get:function(){return je.AlgJSON}}),Object.defineProperty(r,"fromJSON",{enumerable:!0,get:function(){return je.fromJSON}}),Object.defineProperty(r,"parse",{enumerable:!0,get:function(){return xe.parse}}),Object.defineProperty(r,"keyToMove",{enumerable:!0,get:function(){return or.keyToMove}}),Object.defineProperty(r,"validateSiGNMoves",{enumerable:!0,get:function(){return Ce.validateSiGNMoves}}),Object.defineProperty(r,"validateFlatAlg",{enumerable:!0,get:function(){return Ce.validateFlatAlg}}),Object.defineProperty(r,"validateSiGNAlg",{enumerable:!0,get:function(){return Ce.validateSiGNAlg}}),Object.defineProperty(r,"ValidationError",{enumerable:!0,get:function(){return Ce.ValidationError}}),Object.defineProperty(r,"serializeURLParam",{enumerable:!0,get:function(){return sr.serializeURLParam}}),Object.defineProperty(r,"deserializeURLParam",{enumerable:!0,get:function(){return sr.deserializeURLParam}}),Object.defineProperty(r,"algCubingNetLink",{enumerable:!0,get:function(){return sr.algCubingNetLink}}),Object.defineProperty(r,"getAlgURLParam",{enumerable:!0,get:function(){return sr.getAlgURLParam}}),Object.defineProperty(r,"setAlgPartTypeMismatchReportingLevel",{enumerable:!0,get:function(){return c.setAlgPartTypeMismatchReportingLevel}});var t={};Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"AlgPartType",{enumerable:!0,get:function(){return n.AlgPartType}}),Object.defineProperty(t,"AlgPart",{enumerable:!0,get:function(){return n.AlgPart}}),Object.defineProperty(t,"Unit",{enumerable:!0,get:function(){return n.Unit}}),Object.defineProperty(t,"Move",{enumerable:!0,get:function(){return n.Move}}),Object.defineProperty(t,"Annotation",{enumerable:!0,get:function(){return n.Annotation}}),Object.defineProperty(t,"Container",{enumerable:!0,get:function(){return n.Container}}),Object.defineProperty(t,"WithAmount",{enumerable:!0,get:function(){return n.WithAmount}}),Object.defineProperty(t,"Sequence",{enumerable:!0,get:function(){return n.Sequence}}),Object.defineProperty(t,"Group",{enumerable:!0,get:function(){return n.Group}}),Object.defineProperty(t,"Commutator",{enumerable:!0,get:function(){return n.Commutator}}),Object.defineProperty(t,"Conjugate",{enumerable:!0,get:function(){return n.Conjugate}}),Object.defineProperty(t,"Pause",{enumerable:!0,get:function(){return n.Pause}}),Object.defineProperty(t,"NewLine",{enumerable:!0,get:function(){return n.NewLine}}),Object.defineProperty(t,"Comment",{enumerable:!0,get:function(){return n.Comment}}),Object.defineProperty(t,"MoveFamily",{enumerable:!0,get:function(){return q.MoveFamily}}),Object.defineProperty(t,"BlockMove",{enumerable:!0,get:function(){return q.BlockMove}}),Object.defineProperty(t,"BareBlockMove",{enumerable:!0,get:function(){return q.BareBlockMove}}),Object.defineProperty(t,"LayerBlockMove",{enumerable:!0,get:function(){return q.LayerBlockMove}}),Object.defineProperty(t,"RangeBlockMove",{enumerable:!0,get:function(){return q.RangeBlockMove}});var n={};Object.defineProperty(n,"__esModule",{value:!0});var a=h;n.matchesAlgType=a;var o=function(e,r){h(e,r)||(0,c.reportTypeMismatch)(`Expected "type": "${r}", saw "type": "${e.type}".`);return e};n.assertMatchesType=o;var u=function(e){if(!("type"in e))return!1;return!h(e,"sequence")};n.isUnit=u;var i=y;n.assertIsUnit=i;var s=(g=void 0,w=n.AlgPart=g,B=n.Unit=w,P=n.Move=B,L=n.Annotation=P,k=n.Container=L,x=n.Sequence=k,S=n.Group=x,O=n.Commutator=S,C=n.Conjugate=O,T=n.Pause=C,n.NewLine=T);n.Comment=s;var c={};Object.defineProperty(c,"__esModule",{value:!0});var l=function(e){switch(f){case"error":throw new Error(e);case"warn":return p++,void(p<10&&p+1===10&&console.warn(e))}};c.reportTypeMismatch=l;var v=function(e){f=e};c.setAlgPartTypeMismatchReportingLevel=v;let f="warn";let p=0;function m(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}class d{constructor(){m(this,"type",void 0)}}var g=d;function h(e,r){return e.type===r}function y(e){return"type"in e||(0,c.reportTypeMismatch)('Expected "unit", saw a value that was not an AlgPart.'),h(e,"sequence")&&(0,c.reportTypeMismatch)('Expected unit, saw "sequence".'),e}n.AlgPart=g;class b extends d{}var w=b;n.Unit=w;class M extends b{}var B=M;n.Move=B;class A extends b{}var P=A;n.Annotation=P;class j extends b{}var L=j;n.Container=L;var k=class extends d{constructor(e){super(),this.nestedUnits=e,m(this,"type","sequence");for(const r of e)y(r);Object.freeze(this.nestedUnits),Object.freeze(this)}};n.Sequence=k;var x=class extends j{constructor(e,r=1){super(),this.nestedSequence=e,this.amount=r,m(this,"type","group"),Object.freeze(this)}};n.Group=x;var S=class extends j{constructor(e,r,t=1){super(),this.A=e,this.B=r,this.amount=t,m(this,"type","commutator"),Object.freeze(this)}};n.Commutator=S;var O=class extends j{constructor(e,r,t=1){super(),this.A=e,this.B=r,this.amount=t,m(this,"type","conjugate"),Object.freeze(this)}};n.Conjugate=O;var C=class extends M{constructor(){super(),m(this,"type","pause"),Object.freeze(this)}};n.Pause=C;var T=class extends A{constructor(){super(),m(this,"type","newLine"),Object.freeze(this)}};n.NewLine=T;s=class extends A{constructor(e){super(),this.comment=e,m(this,"type","comment"),Object.freeze(this)}},n.Comment=s;var q={};Object.defineProperty(q,"__esModule",{value:!0});var U=function(e,r){return new F(void 0,void 0,e,r)};q.BareBlockMove=U;var E=function(e,r,t){return new F(void 0,e,r,t)};q.LayerBlockMove=E;var N=function(e,r,t,n){return new F(e,r,t,n)};q.RangeBlockMove=N;var _=void 0;function z(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}q.BlockMove=_;class F extends n.Move{constructor(e,r,t,n=1){if(super(),this.family=t,this.amount=n,z(this,"type","blockMove"),z(this,"outerLayer",void 0),z(this,"innerLayer",void 0),r&&(this.innerLayer=r,e&&(this.outerLayer=e)),e&&!r)throw new Error("Attempted to contruct block move with outer layer but no inner layer");Object.freeze(this)}}_=F,q.BlockMove=_;var G={};Object.defineProperty(G,"__esModule",{value:!0});var R=V;G.modifiedBlockMove=R;var I=function(e,r,n=!1,a=0){const o=e.nestedUnits,u=o[o.length-1];if(n&&u&&(s=r,(i=u).family===s.family&&i.innerLayer===s.innerLayer&&i.outerLayer===s.outerLayer)){const n=e.nestedUnits.slice(0,o.length-1);let i=u.amount+r.amount;return a>1&&(i=(i%a+a)%a,2*i>a&&(i-=a)),0!==i&&n.push(V(u,{amount:i})),new t.Sequence(n)}return new t.Sequence([...o,r]);var i,s};G.experimentalAppendBlockMove=I;var $=function(...e){return new t.Sequence(Array.prototype.concat.apply([],[...e].map(e=>e.nestedUnits)))};function V(e,r){var n,a,o,u;return new t.BlockMove(null!==(n=r.outerLayer)&&void 0!==n?n:e.outerLayer,null!==(a=r.innerLayer)&&void 0!==a?a:e.innerLayer,null!==(o=r.family)&&void 0!==o?o:e.family,null!==(u=r.amount)&&void 0!==u?u:e.amount)}G.experimentalConcatAlgs=$;var D={};Object.defineProperty(D,"__esModule",{value:!0});var J=ce;D.blockMoveToString=J;var W=function(e){return Pe(new t.BlockMove(e.outerLayer,e.innerLayer,e.family,1))};D.experimentalBlockMoveQuantumName=W;var Z=(H=void 0,Y=D.TraversalDownUp=H,re=D.TraversalUp=Y,ne=D.Invert=re,oe=D.Expand=ne,ie=D.StructureEquals=oe,ve=D.CoalesceBaseMoves=ie,ye=D.ToString=ve,be=D.invert=ye,we=D.expand=be,Me=D.structureEquals=we,Be=D.coalesceBaseMoves=Me,Ae=D.algToString=Be,D.algPartStructureEqualsForTesting=Ae);function K(e,r,t){switch(r.type){case"sequence":return(0,n.assertMatchesType)(r,"sequence"),e.traverseSequence(r,t);case"group":return(0,n.assertMatchesType)(r,"group"),e.traverseGroup(r,t);case"blockMove":return(0,n.assertMatchesType)(r,"blockMove"),e.traverseBlockMove(r,t);case"commutator":return(0,n.assertMatchesType)(r,"commutator"),e.traverseCommutator(r,t);case"conjugate":return(0,n.assertMatchesType)(r,"conjugate"),e.traverseConjugate(r,t);case"pause":return(0,n.assertMatchesType)(r,"pause"),e.traversePause(r,t);case"newLine":return(0,n.assertMatchesType)(r,"newLine"),e.traverseNewLine(r,t);case"comment":return(0,n.assertMatchesType)(r,"comment"),e.traverseComment(r,t);default:throw new Error(`Unknown AlgPart type: ${r.type}`)}}D.algPartToStringForTesting=Z;class Q{traverse(e,r){return K(this,e,r)}traverseIntoUnit(e,r){return(0,n.assertIsUnit)(this.traverse(e,r))}}var H=Q;D.TraversalDownUp=H;class X extends Q{traverse(e){return K(this,e,void 0)}traverseIntoUnit(e){return(0,n.assertIsUnit)(this.traverse(e))}}var Y=X;D.TraversalUp=Y;class ee extends X{traverseSequence(e){return new t.Sequence(e.nestedUnits.map(e=>this.traverseIntoUnit(e)).reverse())}traverseGroup(e){return new t.Group(this.traverseSequence(e.nestedSequence),e.amount)}traverseBlockMove(e){return new t.BlockMove(e.outerLayer,e.innerLayer,e.family,-e.amount)}traverseCommutator(e){return new t.Commutator(e.B,e.A,e.amount)}traverseConjugate(e){return new t.Conjugate(e.A,this.traverseSequence(e.B),e.amount)}traversePause(e){return e}traverseNewLine(e){return e}traverseComment(e){return e}}var re=ee;D.Invert=re;class te extends X{traverseSequence(e){return new t.Sequence(this.flattenSequenceOneLevel(e.nestedUnits.map(e=>this.traverse(e))))}traverseGroup(e){return this.repeat(this.flattenSequenceOneLevel([this.traverse(e.nestedSequence)]),e)}traverseBlockMove(e){return e}traverseCommutator(e){const r=this.traverseSequence(e.A),t=this.traverseSequence(e.B);let n=[];return n=n.concat(r,t,he(r),he(t)),this.repeat(this.flattenSequenceOneLevel(n),e)}traverseConjugate(e){const r=this.traverseSequence(e.A),t=this.traverseSequence(e.B);let n=[];return n=n.concat(r,t,he(r)),this.repeat(this.flattenSequenceOneLevel(n),e)}traversePause(e){return e}traverseNewLine(e){return e}traverseComment(e){return e}flattenSequenceOneLevel(e){let r=[];for(const t of e)if((0,n.matchesAlgType)(t,"sequence"))r=r.concat(t.nestedUnits);else{if(!(0,n.isUnit)(t))throw new Error("expand() encountered an internal error. Did you pass in a valid Algorithm?");r.push(t)}return r}repeat(e,r){const n=Math.abs(r.amount);let a;a=-1===(r.amount>0?1:-1)?he(new t.Sequence(e)).nestedUnits:e;let o=[];for(let e=0;e<n;e++)o=o.concat(a);return new t.Sequence(o)}}var ne=te;D.Expand=ne;class ae extends Q{traverseSequence(e,r){if((0,n.isUnit)(r))return!1;const t=r;if(e.nestedUnits.length!==t.nestedUnits.length)return!1;for(let r=0;r<e.nestedUnits.length;r++)if(!this.traverse(e.nestedUnits[r],t.nestedUnits[r]))return!1;return!0}traverseGroup(e,r){return(0,n.matchesAlgType)(r,"group")&&this.traverse(e.nestedSequence,r.nestedSequence)}traverseBlockMove(e,r){return(0,n.matchesAlgType)(r,"blockMove")&&e.outerLayer===r.outerLayer&&e.innerLayer===r.innerLayer&&e.family===r.family&&e.amount===r.amount}traverseCommutator(e,r){return(0,n.matchesAlgType)(r,"commutator")&&this.traverse(e.A,r.A)&&this.traverse(e.B,r.B)}traverseConjugate(e,r){return(0,n.matchesAlgType)(r,"conjugate")&&this.traverse(e.A,r.A)&&this.traverse(e.B,r.B)}traversePause(e,r){return(0,n.matchesAlgType)(r,"pause")}traverseNewLine(e,r){return(0,n.matchesAlgType)(r,"newLine")}traverseComment(e,r){return(0,n.matchesAlgType)(r,"comment")&&e.comment===r.comment}}var oe=ae;D.StructureEquals=oe;class ue extends X{traverseSequence(e){const r=[];for(const a of e.nestedUnits)if((0,n.matchesAlgType)(a,"blockMove"))if(r.length>0){const e=r[r.length-1];if((0,n.matchesAlgType)(e,"blockMove")&&this.sameBlock(e,a)){const n=e.amount+a.amount;r.pop(),0!==n&&r.push(new t.BlockMove(a.outerLayer,a.innerLayer,a.family,n))}else r.push(a)}else r.push(a);else r.push(this.traverseIntoUnit(a));return new t.Sequence(r)}traverseGroup(e){return e}traverseBlockMove(e){return e}traverseCommutator(e){return e}traverseConjugate(e){return e}traversePause(e){return e}traverseNewLine(e){return e}traverseComment(e){return e}sameBlock(e,r){return e.outerLayer===r.outerLayer&&e.innerLayer===r.innerLayer&&e.family===r.family}}var ie=ue;function se(e){const r=Math.abs(e);let t="";return 1!==r&&(t+=String(r)),r!==e&&(t+="'"),t}function ce(e){let r=e.family+se(e.amount);return void 0!==e.innerLayer&&(r=String(e.innerLayer)+r,void 0!==e.outerLayer&&(r=String(e.outerLayer)+"-"+r)),r}D.CoalesceBaseMoves=ie;class le extends X{traverseSequence(e){let r="";if(e.nestedUnits.length>0){r+=this.traverse(e.nestedUnits[0]);for(let t=1;t<e.nestedUnits.length;t++)r+=this.spaceBetween(e.nestedUnits[t-1],e.nestedUnits[t]),r+=this.traverse(e.nestedUnits[t])}return r}traverseGroup(e){return"("+this.traverse(e.nestedSequence)+")"+se(e.amount)}traverseBlockMove(e){return ce(e)}traverseCommutator(e){return"["+this.traverse(e.A)+", "+this.traverse(e.B)+"]"+se(e.amount)}traverseConjugate(e){return"["+this.traverse(e.A)+": "+this.traverse(e.B)+"]"+se(e.amount)}traversePause(e){return"."}traverseNewLine(e){return"\n"}traverseComment(e){return"//"+e.comment}spaceBetween(e,r){return(0,n.matchesAlgType)(e,"pause")&&(0,n.matchesAlgType)(r,"pause")||(0,n.matchesAlgType)(e,"newLine")||(0,n.matchesAlgType)(r,"newLine")?"":(0,n.matchesAlgType)(e,"comment")&&!(0,n.matchesAlgType)(r,"newLine")?"\n":" "}}var ve=le;D.ToString=ve;const fe=new ee,pe=new te,me=new ae,de=new ue,ge=new le,he=fe.traverseSequence.bind(fe);var ye=he;D.invert=ye;var be=pe.traverseSequence.bind(pe);D.expand=be;var we=me.traverseSequence.bind(me);D.structureEquals=we;var Me=de.traverseSequence.bind(de);D.coalesceBaseMoves=Me;var Be=ge.traverseSequence.bind(ge);D.algToString=Be;var Ae=ge.traverse.bind(ge);D.algPartStructureEqualsForTesting=Ae;const Pe=ge.traverse.bind(ge);Z=Pe,D.algPartToStringForTesting=Z;var je={};Object.defineProperty(je,"__esModule",{value:!0});var Le=ke;function ke(e){if("sequence"!==e.type)throw new Error(`Expected Sequence while parsing, got: ${e.type}`);if(!e.nestedUnits)throw new Error("Missing nestedUnits");return new t.Sequence(e.nestedUnits.map(e=>function(e){switch(e.type){case"sequence":throw new Error("Expected AlgPart while parsing, got `Sequence`.");case"group":if(!e.nestedSequence)throw new Error("Missing nestedSequence");if(!e.amount)throw new Error("Missing amount");return new t.Group(ke(e.nestedSequence),e.amount);case"blockMove":if(!e.family)throw new Error("Missing family");if(!e.amount)throw new Error("Missing amount");return new t.BlockMove(e.outerLayer,e.innerLayer,e.family,e.amount);case"commutator":if(!e.A)throw new Error("Missing A");if(!e.B)throw new Error("Missing B");if(!e.amount)throw new Error("Missing amount");return new t.Commutator(ke(e.A),ke(e.B),e.amount);case"conjugate":if(!e.A)throw new Error("Missing A");if(!e.B)throw new Error("Missing B");if(!e.amount)throw new Error("Missing amount");return new t.Conjugate(ke(e.A),ke(e.B),e.amount);case"pause":return new t.Pause;case"newLine":return new t.NewLine;case"comment":if(!e.comment&&""!==e.comment)throw new Error("Missing comment");return new t.Comment(e.comment);default:throw new Error(`Unknown alg type: ${e.type}`)}}(e)))}je.fromJSON=Le;var xe={};Object.defineProperty(xe,"__esModule",{value:!0});var Se=ar;xe.parse=Se;var Oe=function(e){return ar(e,{validators:[Ce.validateSiGNAlg]})};xe.parseSiGN=Oe;var Ce={};Object.defineProperty(Ce,"__esModule",{value:!0});var Te=function(e){Ze(e),He(e)};Ce.validateSiGNAlg=Te;var qe=(Ee=void 0,_e=Ce.ValidationError=Ee,Ve=Ce.ValidatorTraversal=_e,Je=Ce.BlockMoveValidator=Ve,Ke=Ce.FlatAlgValidator=Je,Ce.validateSiGNMoves=Ke);Ce.validateFlatAlg=qe;class Ue extends Error{}var Ee=Ue;Ce.ValidationError=Ee;class Ne extends D.TraversalUp{}var _e=Ne;function ze(e,r){for(const t of r)if(!0===t[e])return!0;return!1}Ce.ValidatorTraversal=_e;const Fe={x:!0,y:!0,z:!0,M:!0,E:!0,S:!0,m:!0,e:!0,s:!0},Ge={U:!0,L:!0,F:!0,R:!0,B:!0,D:!0},Re={u:!0,l:!0,f:!0,r:!0,b:!0,d:!0,Uw:!0,Lw:!0,Fw:!0,Rw:!0,Bw:!0,Dw:!0};class Ie extends Ne{traverseSequence(e){for(const r of e.nestedUnits)this.traverse(r)}traverseGroup(e){return this.traverse(e.nestedSequence)}traverseCommutator(e){this.traverse(e.A),this.traverse(e.B)}traverseConjugate(e){this.traverse(e.A),this.traverse(e.B)}traversePause(e){}traverseNewLine(e){}traverseComment(e){}}class $e extends Ie{traverseBlockMove(e){if(void 0===e.outerLayer)if(void 0===e.innerLayer){if(!ze(e.family,[Re,Ge,Fe]))throw new Ue(`Invalid SiGN plain move family: ${e.family}`)}else{if(!ze(e.family,[Re,Ge]))throw new Ue(`The provided SiGN move family is invalid, or cannot have an inner slice: ${e.family}`);if(e.innerLayer<=0)throw new Ue("Cannot have an inner layer of 0 or less.")}else{if(void 0===e.innerLayer)throw new Ue("A BlockMove with an outer layer must have an inner layer.");if(!ze(e.family,[Re]))throw new Ue(`The provided SiGN move family is invalid, or cannot have an outer and inner layer: ${e.family}`);if(e.outerLayer<=0)throw new Ue("Cannot have an outer layer of 0 or less.");if(e.outerLayer>=e.innerLayer)throw new Ue("The outer layer must be less than the inner layer.")}}}var Ve=$e;Ce.BlockMoveValidator=Ve;class De extends Ne{traverseSequence(e){for(const r of e.nestedUnits)this.traverse(r)}traverseGroup(e){throw new Ue("A flat alg cannot contain a group.")}traverseBlockMove(e){}traverseCommutator(e){throw new Ue("A flat alg cannot contain a commutator.")}traverseConjugate(e){throw new Ue("A flat alg cannot contain a conjugate.")}traversePause(e){}traverseNewLine(e){}traverseComment(e){}}var Je=De;Ce.FlatAlgValidator=Je;const We=new $e,Ze=We.traverse.bind(We);var Ke=Ze;Ce.validateSiGNMoves=Ke;const Qe=new De,He=Qe.traverse.bind(Qe);qe=He,Ce.validateFlatAlg=qe;var Xe={};Object.defineProperty(Xe,"__esModule",{value:!0});var Ye=void 0;Xe.parse=Ye;function er(e,r,t,n){this.message=e,this.expected=r,this.found=t,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,er)}!function(e,r){function t(){this.constructor=e}t.prototype=r.prototype,e.prototype=new t}(er,Error),er.buildMessage=function(e,r){var t={literal:function(e){return'"'+a(e.text)+'"'},class:function(e){var r,t="";for(r=0;r<e.parts.length;r++)t+=e.parts[r]instanceof Array?o(e.parts[r][0])+"-"+o(e.parts[r][1]):o(e.parts[r]);return"["+(e.inverted?"^":"")+t+"]"},any:function(e){return"any character"},end:function(e){return"end of input"},other:function(e){return e.description}};function n(e){return e.charCodeAt(0).toString(16).toUpperCase()}function a(e){return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+n(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+n(e)}))}function o(e){return e.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(e){return"\\x0"+n(e)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(e){return"\\x"+n(e)}))}return"Expected "+function(e){var r,n,a,o=new Array(e.length);for(r=0;r<e.length;r++)o[r]=(a=e[r],t[a.type](a));if(o.sort(),o.length>0){for(r=1,n=1;r<o.length;r++)o[r-1]!==o[r]&&(o[n]=o[r],n++);o.length=n}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(e)+" but "+function(e){return e?'"'+a(e)+'"':"end of input"}(r)+" found."};var rr,tr=(rr={SyntaxError:er,parse:function(e,r){r=void 0!==r?r:{};var t,n={},a={start:N},o=N,u=/^[0-9]/,i=C([["0","9"]],!1,!1),s=O("'",!1),c=/^[_A-Za-z]/,l=C(["_",["A","Z"],["a","z"]],!1,!1),v=O("-",!1),f=O("[",!1),p=/^[,:]/,m=C([",",":"],!1,!1),d=O("]",!1),g=O("(",!1),h=O(")",!1),y=O("//",!1),b=/^[^\n\r]/,w=C(["\n","\r"],!0,!1),M=/^[\n\r]/,B=C(["\n","\r"],!1,!1),A=O(".",!1),P=/^[ ]/,j=C([" "],!1,!1),L=0,k=[{line:1,column:1}],x=0,S=[];if("startRule"in r){if(!(r.startRule in a))throw new Error("Can't start parsing from rule \""+r.startRule+'".');o=a[r.startRule]}function O(e,r){return{type:"literal",text:e,ignoreCase:r}}function C(e,r,t){return{type:"class",parts:e,inverted:r,ignoreCase:t}}function T(r){var t,n=k[r];if(n)return n;for(t=r-1;!k[t];)t--;for(n={line:(n=k[t]).line,column:n.column};t<r;)10===e.charCodeAt(t)?(n.line++,n.column=1):n.column++,t++;return k[r]=n,n}function q(e,r){var t=T(e),n=T(r);return{start:{offset:e,line:t.line,column:t.column},end:{offset:r,line:n.line,column:n.column}}}function U(e){L<x||(L>x&&(x=L,S=[]),S.push(e))}function E(e,r,t){return new er(er.buildMessage(e,r),e,r,t)}function N(){return V()}function _(){var r,t,a;if(r=L,t=[],u.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(i)),a!==n)for(;a!==n;)t.push(a),u.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(i));else t=n;return t!==n&&(r,t=parseInt(t.join(""),10)),r=t}function z(){var r,t,a;if(r=L,t=[],c.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(l)),a!==n)for(;a!==n;)t.push(a),c.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(l));else t=n;return t!==n&&(r,t=t.join("")),r=t}function F(){var r,t,a,o,u,i;return(r=function(){var r,t,a,o,u;return r=L,(t=z())!==n&&(r,t={type:"blockMove",family:t}),(r=t)===n&&(r=L,(t=_())!==n&&(a=z())!==n?(r,r=t=function(e,r){return{type:"blockMove",family:r,innerLayer:e}}(t,a)):(L=r,r=n),r===n&&(r=L,(t=_())!==n?(45===e.charCodeAt(L)?(a="-",L++):(a=n,U(v)),a!==n&&(o=_())!==n&&(u=z())!==n?(r,r=t=function(e,r,t){return{type:"blockMove",family:t,outerLayer:e,innerLayer:r}}(t,o,u)):(L=r,r=n)):(L=r,r=n))),r}())===n&&(r=L,91===e.charCodeAt(L)?(t="[",L++):(t=n,U(f)),t!==n&&(a=V())!==n?(p.test(e.charAt(L))?(o=e.charAt(L),L++):(o=n,U(m)),o!==n&&(u=V())!==n?(93===e.charCodeAt(L)?(i="]",L++):(i=n,U(d)),i!==n?(r,r=t={type:","===o?"commutator":"conjugate",A:a,B:u}):(L=r,r=n)):(L=r,r=n)):(L=r,r=n),r===n&&(r=L,40===e.charCodeAt(L)?(t="(",L++):(t=n,U(g)),t!==n&&(a=V())!==n?(41===e.charCodeAt(L)?(o=")",L++):(o=n,U(h)),o!==n?(r,r=t={type:"group",nestedSequence:a}):(L=r,r=n)):(L=r,r=n))),r}function G(){var r,t,a,o,u;return r=L,(t=F())!==n&&(a=function(){var r,t,a;return r=L,(t=_())!==n?(39===e.charCodeAt(L)?(a="'",L++):(a=n,U(s)),a!==n?(r,r=t=-t):(L=r,r=n)):(L=r,r=n),r===n&&(r=_())===n&&(r=L,39===e.charCodeAt(L)?(t="'",L++):(t=n,U(s)),t!==n&&(r,t=-1),r=t),r}())!==n?(r,u=a,(o=t).amount=u,r=t=o):(L=r,r=n),r===n&&(r=L,(t=F())!==n&&(r,t=function(e){return e.amount=1,e}(t)),r=t),r}function R(){var r,t;return r=L,M.test(e.charAt(L))?(t=e.charAt(L),L++):(t=n,U(B)),t!==n&&(r,t={type:"newLine"}),(r=t)===n&&(r=L,46===e.charCodeAt(L)?(t=".",L++):(t=n,U(A)),t!==n&&(r,t={type:"pause"}),(r=t)===n&&(r=function(){var r,t,a,o;if(r=L,"//"===e.substr(L,2)?(t="//",L+=2):(t=n,U(y)),t!==n){for(a=[],b.test(e.charAt(L))?(o=e.charAt(L),L++):(o=n,U(w));o!==n;)a.push(o),b.test(e.charAt(L))?(o=e.charAt(L),L++):(o=n,U(w));a!==n?(r,r=t={type:"comment",comment:a.join("")}):(L=r,r=n)}else L=r,r=n;return r}())),r}function I(){var e;return(e=G())===n&&(e=R()),e}function $(){var e,r,t;return e=L,(r=I())!==n&&(t=$())!==n?(e,e=r=[r].concat(t)):(L=e,e=n),e===n&&(e=L,(r=I())!==n&&(e,r=function(e){return[e]}(r)),e=r),e}function V(){var r,t,a,o,u;for(r=L,t=[],P.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(j));a!==n;)t.push(a),P.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(j));if(t!==n)if((a=function r(){var t,a,o,u,i;if(t=L,(a=$())!==n){if(o=[],P.test(e.charAt(L))?(u=e.charAt(L),L++):(u=n,U(j)),u!==n)for(;u!==n;)o.push(u),P.test(e.charAt(L))?(u=e.charAt(L),L++):(u=n,U(j));else o=n;o!==n&&(u=r())!==n?(t,i=u,t=a=a.concat(i)):(L=t,t=n)}else L=t,t=n;return t===n&&(t=$()),t}())!==n){for(o=[],P.test(e.charAt(L))?(u=e.charAt(L),L++):(u=n,U(j));u!==n;)o.push(u),P.test(e.charAt(L))?(u=e.charAt(L),L++):(u=n,U(j));o!==n?(r,r=t={type:"sequence",nestedUnits:a}):(L=r,r=n)}else L=r,r=n;else L=r,r=n;if(r===n){for(r=L,t=[],P.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(j));a!==n;)t.push(a),P.test(e.charAt(L))?(a=e.charAt(L),L++):(a=n,U(j));t!==n&&(r,t={type:"sequence",nestedUnits:[]}),r=t}return r}if((t=o())!==n&&L===e.length)return t;throw t!==n&&L<e.length&&U({type:"end"}),E(S,x<e.length?e.charAt(x):null,x<e.length?q(x,x+1):q(x,x))}})&&rr.__esModule?rr:{default:rr};const{parse:nr}=tr.default;function ar(e,r={validators:[]}){r.validators=r.validators||[];const t=(0,je.fromJSON)((0,Xe.parse)(e));for(const e of r.validators)e(t);return t}Ye=nr,Xe.parse=Ye;var or={};Object.defineProperty(or,"__esModule",{value:!0});var ur=function(e){if(e.altKey||e.ctrlKey)return null;return ir[e.keyCode]||null};or.keyToMove=ur;const ir={73:(0,t.BareBlockMove)("R"),75:(0,t.BareBlockMove)("R",-1),87:(0,t.BareBlockMove)("B"),79:(0,t.BareBlockMove)("B",-1),83:(0,t.BareBlockMove)("D"),76:(0,t.BareBlockMove)("D",-1),68:(0,t.BareBlockMove)("L"),69:(0,t.BareBlockMove)("L",-1),74:(0,t.BareBlockMove)("U"),70:(0,t.BareBlockMove)("U",-1),72:(0,t.BareBlockMove)("F"),71:(0,t.BareBlockMove)("F",-1),78:(0,t.BareBlockMove)("x",-1),67:(0,t.BareBlockMove)("l"),82:(0,t.BareBlockMove)("l",-1),85:(0,t.BareBlockMove)("r"),77:(0,t.BareBlockMove)("r",-1),88:(0,t.BareBlockMove)("d",1),188:(0,t.BareBlockMove)("d",-1),84:(0,t.BareBlockMove)("x"),89:(0,t.BareBlockMove)("x"),66:(0,t.BareBlockMove)("x",-1),186:(0,t.BareBlockMove)("y"),59:(0,t.BareBlockMove)("y"),65:(0,t.BareBlockMove)("y",-1),80:(0,t.BareBlockMove)("z"),81:(0,t.BareBlockMove)("z",-1),90:(0,t.BareBlockMove)("M",-1),190:(0,t.BareBlockMove)("M",-1)};var sr={};Object.defineProperty(sr,"__esModule",{value:!0});var cr=pr;sr.serializeURLParam=cr;var lr=mr;sr.deserializeURLParam=lr;var vr=function(e){return mr(new URLSearchParams(window.location.search).get(e)||"")};sr.getAlgURLParam=vr;var fr=function(e){const r=new URL("https://alg.cubing.net");if(!e.alg)throw new Error("An alg parameter is required.");r.searchParams.set("alg",pr(e.alg)),e.setup&&r.searchParams.set("setup",pr(e.setup));e.title&&r.searchParams.set("title",e.title);if(e.puzzle){if(!["1x1x1","2x2x2","3x3x3","4x4x4","5x5x5","6x6x6","7x7x7","8x8x8","9x9x9","10x10x10","11x11x11","12x12x12","13x13x13","14x14x14","16x16x16","17x17x17"].includes(e.puzzle))throw new Error(`Invalid puzzle parameter: ${e.puzzle}`);r.searchParams.set("puzzle",e.puzzle)}if(e.stage){if(!["full","cross","F2L","LL","OLL","PLL","CLS","ELS","L6E","CMLL","WV","ZBLL","void"].includes(e.stage))throw new Error(`Invalid stage parameter: ${e.stage}`);r.searchParams.set("stage",e.stage)}if(e.view){if(!["editor","playback","fullscreen"].includes(e.view))throw new Error(`Invalid view parameter: ${e.view}`);r.searchParams.set("view",e.view)}if(e.type){if(!["moves","reconstruction","alg","reconstruction-end-with-setup"].includes(e.type))throw new Error(`Invalid type parameter: ${e.type}`);r.searchParams.set("type",e.type)}return r.toString()};function pr(e){let r=(0,D.algToString)(e);return r=r.replace(/_/g,"&#95;").replace(/ /g,"_"),r=r.replace(/\+/g,"&#2b;"),r=r.replace(/-/g,"&#45;").replace(/'/g,"-"),r}function mr(e){let r=e;return r=r.replace(/-/g,"'").replace(/&#45;/g,"-"),r=r.replace(/\+/g," ").replace(/&#2b;/g,"+"),r=r.replace(/_/g," ").replace(/&#95;/g,"_"),(0,xe.parse)(r)}sr.algCubingNetLink=fr;
//# sourceMappingURL=alg.js.map
